#!/usr/bin/bash
#
# Preseeds keys in the gpg-agent with the auth token used to login.
# To use this add the following to your pam login file:
#
#  auth optional pam_exec.so expose_authtok /usr/bin/gpg-pam-exec
#

# grab PAM-provided auth token
read token

if [ $(id -u) = 0 ]
then
    # We're not running as the executing user. Fix that
    exec su ${PAM_USER} -c $(realpath ${BASH_SOURCE[0]}) <<< "$token"
fi

# Use XDG directory for gnupg config
export GNUPGHOME="${HOME}/.config/gnupg"

# Set these fingerprints:
#  - pub/sub fprints only for priv keys
#  - SSH keys managed by gpg
fingerprints=($(gpg-connect-agent 'keyinfo --list' /bye | sed -nr 's/^.*KEYINFO ([^ ]+).*$/\1/p'))

# Preset each fingerprint
for fingerprint in "${fingerprints[@]}"
do
  /usr/lib/gnupg/gpg-preset-passphrase -c "$fingerprint" <<< "$token"
done
